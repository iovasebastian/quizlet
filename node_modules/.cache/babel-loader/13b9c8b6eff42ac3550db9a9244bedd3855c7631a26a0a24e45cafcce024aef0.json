{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx\",\n  _s = $RefreshSig$();\n// MainComponent.jsx\nimport './MainComponent.css';\nimport React, { useState, useEffect } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport { saveData, loadData } from './storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'questionAnswerData';\nconst MainComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState([]);\n  useEffect(() => {\n    // Load data from local storage when the component mounts\n    const savedData = loadData(STORAGE_KEY);\n    if (savedData) {\n      setInputData(savedData);\n    }\n  }, []);\n  const addLine = () => {\n    setInputData(prevData => [...prevData, {\n      question: '',\n      answer: ''\n    }]);\n  };\n  const handleInputComplete = (index, newData) => {\n    setInputData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      // Save the updated data to local storage\n      saveData(STORAGE_KEY, updatedData);\n      return updatedData;\n    });\n  };\n  const elements = inputData.map((data, index) => /*#__PURE__*/_jsxDEV(LineComp, {\n    initialQuestion: data.question,\n    initialAnswer: data.answer,\n    onInputComplete: newData => handleInputComplete(index, newData)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n  const navigateToFinal = () => {\n    console.log(\"Input data before navigation:\", inputData);\n    navigate('/final', {\n      state: {\n        inputData\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addLine,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigateToFinal,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"INgP+/pKCfBohMLfYAMvnfpTpwE=\", false, function () {\n  return [useNavigate];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","useEffect","LineComp","useNavigate","saveData","loadData","jsxDEV","_jsxDEV","STORAGE_KEY","MainComponent","_s","navigate","inputData","setInputData","savedData","addLine","prevData","question","answer","handleInputComplete","index","newData","updatedData","elements","map","data","initialQuestion","initialAnswer","onInputComplete","fileName","_jsxFileName","lineNumber","columnNumber","navigateToFinal","console","log","state","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx"],"sourcesContent":["// MainComponent.jsx\nimport './MainComponent.css';\nimport React, { useState, useEffect } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport { saveData, loadData } from './storage';\n\nconst STORAGE_KEY = 'questionAnswerData';\n\nconst MainComponent = () => {\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState([]);\n\n  useEffect(() => {\n    // Load data from local storage when the component mounts\n    const savedData = loadData(STORAGE_KEY);\n    if (savedData) {\n      setInputData(savedData);\n    }\n  }, []);\n\n  const addLine = () => {\n    setInputData((prevData) => [...prevData, { question: '', answer: '' }]);\n  };\n\n  const handleInputComplete = (index, newData) => {\n    setInputData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      // Save the updated data to local storage\n      saveData(STORAGE_KEY, updatedData);\n      return updatedData;\n    });\n  };\n\n  const elements = inputData.map((data, index) => (\n    <LineComp\n      key={index}\n      initialQuestion={data.question}\n      initialAnswer={data.answer}\n      onInputComplete={(newData) => handleInputComplete(index, newData)}\n    />\n  ));\n\n  const navigateToFinal = () => {\n    console.log(\"Input data before navigation:\", inputData);\n    navigate('/final', { state: { inputData } });\n  };\n\n  return (\n    <div>\n      <div className='border'>\n        {elements}\n      </div>\n      <button onClick={addLine}>Add</button>\n      <button onClick={navigateToFinal}>Finish</button>\n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":";;AAAA;AACA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAG,oBAAoB;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAGT,QAAQ,CAACG,WAAW,CAAC;IACvC,IAAIM,SAAS,EAAE;MACbD,YAAY,CAACC,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBF,YAAY,CAAEG,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC9CR,YAAY,CAAEG,QAAQ,IAAK;MACzB,MAAMM,WAAW,GAAG,CAAC,GAAGN,QAAQ,CAAC;MACjCM,WAAW,CAACF,KAAK,CAAC,GAAGC,OAAO;MAC5B;MACAjB,QAAQ,CAACI,WAAW,EAAEc,WAAW,CAAC;MAClC,OAAOA,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAGX,SAAS,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBACzCb,OAAA,CAACL,QAAQ;IAEPwB,eAAe,EAAED,IAAI,CAACR,QAAS;IAC/BU,aAAa,EAAEF,IAAI,CAACP,MAAO;IAC3BU,eAAe,EAAGP,OAAO,IAAKF,mBAAmB,CAACC,KAAK,EAAEC,OAAO;EAAE,GAH7DD,KAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIX,CACF,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEvB,SAAS,CAAC;IACvDD,QAAQ,CAAC,QAAQ,EAAE;MAAEyB,KAAK,EAAE;QAAExB;MAAU;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEL,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAK+B,SAAS,EAAC,QAAQ;MAAAD,QAAA,EACpBd;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNzB,OAAA;MAAQgC,OAAO,EAAExB,OAAQ;MAAAsB,QAAA,EAAC;IAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCzB,OAAA;MAAQgC,OAAO,EAAEN,eAAgB;MAAAI,QAAA,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjDID,aAAa;EAAA,QACAN,WAAW;AAAA;AAAAqC,EAAA,GADxB/B,aAAa;AAmDnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}