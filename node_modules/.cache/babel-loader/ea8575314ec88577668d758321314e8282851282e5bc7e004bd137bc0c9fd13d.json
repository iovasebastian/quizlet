{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/LineComp.jsx\",\n  _s = $RefreshSig$();\n// LineComp.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineComp = ({\n  onAddLine\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleAddLine = () => {\n    onAddLine(question, answer);\n    // Optionally, you can clear the input fields after adding a line\n    setQuestion('');\n    setAnswer('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lineComp\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Question: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Answer: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: answer,\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddLine,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(LineComp, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = LineComp;\nexport default LineComp;\nvar _c;\n$RefreshReg$(_c, \"LineComp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LineComp","onAddLine","_s","question","setQuestion","answer","setAnswer","handleAddLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/LineComp.jsx"],"sourcesContent":["// LineComp.jsx\nimport React, { useState } from 'react';\n\nconst LineComp = ({ onAddLine }) => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleAddLine = () => {\n    onAddLine(question, answer);\n    // Optionally, you can clear the input fields after adding a line\n    setQuestion('');\n    setAnswer('');\n  };\n\n  return (\n    <div className=\"lineComp\">\n      <span>Question: </span>\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n      />\n      <span>Answer: </span>\n      <input\n        type=\"text\"\n        value={answer}\n        onChange={(e) => setAnswer(e.target.value)}\n      />\n      <button onClick={handleAddLine}>Add Line</button>\n    </div>\n  );\n};\n\nexport default LineComp;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1BN,SAAS,CAACE,QAAQ,EAAEE,MAAM,CAAC;IAC3B;IACAD,WAAW,CAAC,EAAE,CAAC;IACfE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFd,OAAA;MAAAU,QAAA,EAAM;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,MAAO;MACdW,QAAQ,EAAGC,CAAC,IAAKX,SAAS,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFd,OAAA;MAAQoB,OAAO,EAAEZ,aAAc;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACX,EAAA,CA5BIF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}