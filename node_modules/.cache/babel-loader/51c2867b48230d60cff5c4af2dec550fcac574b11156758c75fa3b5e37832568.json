{"ast":null,"code":"// MainComponent.jsx\nimport'./MainComponent.css';import React,{useState,useEffect}from'react';import LineComp from'./LineComp';import{useNavigate}from'react-router-dom';import{saveData,loadData}from'./storage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const STORAGE_KEY='questionAnswerData';const MainComponent=()=>{const navigate=useNavigate();const[inputData,setInputData]=useState([]);useEffect(()=>{// Load data from local storage when the component mounts\nconst savedData=loadData(STORAGE_KEY);if(savedData){setInputData(savedData);}},[]);const addLine=()=>{setInputData(prevData=>[...prevData,{question:'',answer:''}]);};const handleInputComplete=(index,newData)=>{setInputData(prevData=>{const updatedData=[...prevData];updatedData[index]=newData;// Save the updated data to local storage\nsaveData(STORAGE_KEY,updatedData);return updatedData;});};const elements=inputData.map((data,index)=>/*#__PURE__*/_jsx(LineComp,{initialQuestion:data.question,initialAnswer:data.answer,onInputComplete:newData=>handleInputComplete(index,newData)},index));const navigateToFinal=()=>{console.log(\"Input data before navigation:\",inputData);navigate('/final',{state:{inputData}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"border\",children:elements}),/*#__PURE__*/_jsx(\"button\",{onClick:addLine,children:\"Add\"}),/*#__PURE__*/_jsx(\"button\",{onClick:navigateToFinal,children:\"Finish\"})]});};export default MainComponent;","map":{"version":3,"names":["React","useState","useEffect","LineComp","useNavigate","saveData","loadData","jsx","_jsx","jsxs","_jsxs","STORAGE_KEY","MainComponent","navigate","inputData","setInputData","savedData","addLine","prevData","question","answer","handleInputComplete","index","newData","updatedData","elements","map","data","initialQuestion","initialAnswer","onInputComplete","navigateToFinal","console","log","state","children","className","onClick"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx"],"sourcesContent":["// MainComponent.jsx\nimport './MainComponent.css';\nimport React, { useState, useEffect } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport { saveData, loadData } from './storage';\n\nconst STORAGE_KEY = 'questionAnswerData';\n\nconst MainComponent = () => {\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState([]);\n\n  useEffect(() => {\n    // Load data from local storage when the component mounts\n    const savedData = loadData(STORAGE_KEY);\n    if (savedData) {\n      setInputData(savedData);\n    }\n  }, []);\n\n  const addLine = () => {\n    setInputData((prevData) => [...prevData, { question: '', answer: '' }]);\n  };\n\n  const handleInputComplete = (index, newData) => {\n    setInputData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      // Save the updated data to local storage\n      saveData(STORAGE_KEY, updatedData);\n      return updatedData;\n    });\n  };\n\n  const elements = inputData.map((data, index) => (\n    <LineComp\n      key={index}\n      initialQuestion={data.question}\n      initialAnswer={data.answer}\n      onInputComplete={(newData) => handleInputComplete(index, newData)}\n    />\n  ));\n\n  const navigateToFinal = () => {\n    console.log(\"Input data before navigation:\", inputData);\n    navigate('/final', { state: { inputData } });\n  };\n\n  return (\n    <div>\n      <div className='border'>\n        {elements}\n      </div>\n      <button onClick={addLine}>Add</button>\n      <button onClick={navigateToFinal}>Finish</button>\n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":"AAAA;AACA,MAAO,qBAAqB,CAC5B,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,QAAQ,CAAEC,QAAQ,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,WAAW,CAAG,oBAAoB,CAExC,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAc,SAAS,CAAGV,QAAQ,CAACK,WAAW,CAAC,CACvC,GAAIK,SAAS,CAAE,CACbD,YAAY,CAACC,SAAS,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpBF,YAAY,CAAEG,QAAQ,EAAK,CAAC,GAAGA,QAAQ,CAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAC,CAAC,CACzE,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAGA,CAACC,KAAK,CAAEC,OAAO,GAAK,CAC9CR,YAAY,CAAEG,QAAQ,EAAK,CACzB,KAAM,CAAAM,WAAW,CAAG,CAAC,GAAGN,QAAQ,CAAC,CACjCM,WAAW,CAACF,KAAK,CAAC,CAAGC,OAAO,CAC5B;AACAlB,QAAQ,CAACM,WAAW,CAAEa,WAAW,CAAC,CAClC,MAAO,CAAAA,WAAW,CACpB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGX,SAAS,CAACY,GAAG,CAAC,CAACC,IAAI,CAAEL,KAAK,gBACzCd,IAAA,CAACL,QAAQ,EAEPyB,eAAe,CAAED,IAAI,CAACR,QAAS,CAC/BU,aAAa,CAAEF,IAAI,CAACP,MAAO,CAC3BU,eAAe,CAAGP,OAAO,EAAKF,mBAAmB,CAACC,KAAK,CAAEC,OAAO,CAAE,EAH7DD,KAIN,CACF,CAAC,CAEF,KAAM,CAAAS,eAAe,CAAGA,CAAA,GAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEnB,SAAS,CAAC,CACvDD,QAAQ,CAAC,QAAQ,CAAE,CAAEqB,KAAK,CAAE,CAAEpB,SAAU,CAAE,CAAC,CAAC,CAC9C,CAAC,CAED,mBACEJ,KAAA,QAAAyB,QAAA,eACE3B,IAAA,QAAK4B,SAAS,CAAC,QAAQ,CAAAD,QAAA,CACpBV,QAAQ,CACN,CAAC,cACNjB,IAAA,WAAQ6B,OAAO,CAAEpB,OAAQ,CAAAkB,QAAA,CAAC,KAAG,CAAQ,CAAC,cACtC3B,IAAA,WAAQ6B,OAAO,CAAEN,eAAgB,CAAAI,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC9C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}