{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx\",\n  _s = $RefreshSig$();\nimport './MainComponent.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  let navigate = useNavigate();\n  function switchScreen() {\n    navigate('/final');\n  }\n  const [inputData, setInputData] = useState([]);\n  const addLine = () => {\n    setInputData(prevData => [...prevData, {\n      question: '',\n      answer: ''\n    }]);\n  };\n  const handleInputComplete = (index, newData) => {\n    setInputData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      return updatedData;\n    });\n  };\n  const elements = inputData.map((data, index) => /*#__PURE__*/_jsxDEV(LineComp, {\n    onInputComplete: newData => handleInputComplete(index, newData)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addLine,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: switchScreen,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: inputData[0].answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"nt2n2pOpwH76C3NF4QJgP81WrIk=\", false, function () {\n  return [useNavigate];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","LineComp","useNavigate","jsxDEV","_jsxDEV","MainComponent","_s","navigate","switchScreen","inputData","setInputData","addLine","prevData","question","answer","handleInputComplete","index","newData","updatedData","elements","map","data","onInputComplete","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx"],"sourcesContent":["import './MainComponent.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nconst MainComponent = () => {\n  let navigate = useNavigate();\n  function switchScreen() {\n    navigate('/final');\n  }\n  const [inputData, setInputData] = useState([]);\n\n  const addLine = () => {\n    setInputData((prevData) => [...prevData, { question: '', answer: '' }]);\n  };\n\n  const handleInputComplete = (index, newData) => {\n    setInputData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      return updatedData;\n    });\n  };\n  const elements = inputData.map((data, index) => (\n    <LineComp\n      key={index}\n      onInputComplete={(newData) => handleInputComplete(index, newData)}\n    />\n  ));\n  \n  return (\n    <div>\n      <div className='border'>\n        {elements}\n      </div>\n      <button onClick={addLine}>Add</button>\n      <button onClick={switchScreen}>Finish</button>\n      <p>{inputData[0].answer}</p>\n      \n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,IAAIC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC5B,SAASM,YAAYA,CAAA,EAAG;IACtBD,QAAQ,CAAC,QAAQ,CAAC;EACpB;EACA,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBD,YAAY,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC9CP,YAAY,CAAEE,QAAQ,IAAK;MACzB,MAAMM,WAAW,GAAG,CAAC,GAAGN,QAAQ,CAAC;MACjCM,WAAW,CAACF,KAAK,CAAC,GAAGC,OAAO;MAC5B,OAAOC,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAGV,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBACzCZ,OAAA,CAACH,QAAQ;IAEPqB,eAAe,EAAGL,OAAO,IAAKF,mBAAmB,CAACC,KAAK,EAAEC,OAAO;EAAE,GAD7DD,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CACF,CAAC;EAEF,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAKwB,SAAS,EAAC,QAAQ;MAAAD,QAAA,EACpBR;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNtB,OAAA;MAAQyB,OAAO,EAAElB,OAAQ;MAAAgB,QAAA,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCtB,OAAA;MAAQyB,OAAO,EAAErB,YAAa;MAAAmB,QAAA,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CtB,OAAA;MAAAuB,QAAA,EAAIlB,SAAS,CAAC,CAAC,CAAC,CAACK;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CApCID,aAAa;EAAA,QACFH,WAAW;AAAA;AAAA4B,EAAA,GADtBzB,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}