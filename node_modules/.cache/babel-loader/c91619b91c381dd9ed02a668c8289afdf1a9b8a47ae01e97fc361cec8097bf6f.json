{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx\",\n  _s = $RefreshSig$();\nimport './MainComponent.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport Final from './Final';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  let navigate = useNavigate();\n  function switchScreen() {\n    navigate('/final');\n  }\n  const [inputData, setInputData] = useState([]);\n  const addLine = () => {\n    setInputData(prevData => [...prevData, {\n      question: '',\n      answer: ''\n    }]);\n  };\n  const handleInputComplete = (index, newData) => {\n    setInputData(prevData => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      console.log(updatedData);\n      return updatedData;\n    });\n  };\n  const elements = inputData.map((data, index) => /*#__PURE__*/_jsxDEV(LineComp, {\n    onInputComplete: newData => handleInputComplete(index, newData)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addLine,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: switchScreen,\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"nt2n2pOpwH76C3NF4QJgP81WrIk=\", false, function () {\n  return [useNavigate];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","LineComp","useNavigate","Final","jsxDEV","_jsxDEV","MainComponent","_s","navigate","switchScreen","inputData","setInputData","addLine","prevData","question","answer","handleInputComplete","index","newData","updatedData","console","log","elements","map","data","onInputComplete","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/MainComponent.jsx"],"sourcesContent":["import './MainComponent.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport LineComp from './LineComp';\nimport { useNavigate } from 'react-router-dom';\nimport Final from './Final';\nconst MainComponent = () => {\n  let navigate = useNavigate();\n  function switchScreen() {\n    navigate('/final');\n  }\n  const [inputData, setInputData] = useState([]);\n\n  const addLine = () => {\n    setInputData((prevData) => [...prevData, { question: '', answer: '' }]);\n  };\n\n  const handleInputComplete = (index, newData) => {\n    setInputData((prevData) => {\n      const updatedData = [...prevData];\n      updatedData[index] = newData;\n      console.log(updatedData);\n      return updatedData;\n    });\n  };\n  const elements = inputData.map((data, index) => (\n    <LineComp\n      key={index}\n      onInputComplete={(newData) => handleInputComplete(index, newData)}\n    />\n  ));\n  \n  return (\n    <div>\n      <div className='border'>\n        {elements}\n      </div>\n      <button onClick={addLine}>Add</button>\n      <button onClick={switchScreen}>Finish</button>\n      \n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,IAAIC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC5B,SAASO,YAAYA,CAAA,EAAG;IACtBD,QAAQ,CAAC,QAAQ,CAAC;EACpB;EACA,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpBD,YAAY,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC9CP,YAAY,CAAEE,QAAQ,IAAK;MACzB,MAAMM,WAAW,GAAG,CAAC,GAAGN,QAAQ,CAAC;MACjCM,WAAW,CAACF,KAAK,CAAC,GAAGC,OAAO;MAC5BE,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;MACxB,OAAOA,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMG,QAAQ,GAAGZ,SAAS,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,kBACzCZ,OAAA,CAACJ,QAAQ;IAEPwB,eAAe,EAAGP,OAAO,IAAKF,mBAAmB,CAACC,KAAK,EAAEC,OAAO;EAAE,GAD7DD,KAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CACF,CAAC;EAEF,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAD,QAAA,EACpBR;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNxB,OAAA;MAAQ2B,OAAO,EAAEpB,OAAQ;MAAAkB,QAAA,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCxB,OAAA;MAAQ2B,OAAO,EAAEvB,YAAa;MAAAqB,QAAA,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCID,aAAa;EAAA,QACFJ,WAAW;AAAA;AAAA+B,EAAA,GADtB3B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}