{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/Final.jsx\",\n  _s = $RefreshSig$();\n// Final.jsx\nimport { useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport './Final.css';\nimport { loadData } from './storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Final = () => {\n  _s();\n  const [state, setState] = useState(false);\n  const [number, setNumber] = useState(0);\n  const location = useLocation();\n  let inputDataWrapper = location.state;\n  if (!inputDataWrapper) {\n    // If the state is not provided, try loading from local storage\n    inputDataWrapper = {\n      inputData: loadData('questionAnswerData') || []\n    };\n  }\n  const inputData = inputDataWrapper.inputData;\n  const style = state ? inputData[number].question : inputData[number].answer;\n  function reverseState() {\n    setState(prevState => !prevState);\n  }\n  function handleNext() {\n    setNumber(prevNumber => prevNumber < inputData.length - 1 ? prevNumber + 1 : 0);\n  }\n  function handlePrev() {\n    setNumber(prevNumber => prevNumber > 0 ? prevNumber - 1 : inputData.length - 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizCard\",\n      onClick: reverseState,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Final, \"5cgcm34X7+IJ2lQRbH0Lga+kNVQ=\", false, function () {\n  return [useLocation];\n});\n_c = Final;\nexport default Final;\nvar _c;\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"names":["useState","useLocation","loadData","jsxDEV","_jsxDEV","Final","_s","state","setState","number","setNumber","location","inputDataWrapper","inputData","style","question","answer","reverseState","prevState","handleNext","prevNumber","length","handlePrev","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebastian/vscode/reactjs/quizlet-app/quizlet/src/Final.jsx"],"sourcesContent":["// Final.jsx\nimport { useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport './Final.css';\nimport { loadData } from './storage';\n\nconst Final = () => {\n  const [state, setState] = useState(false);\n  const [number, setNumber] = useState(0);\n  const location = useLocation();\n  let inputDataWrapper = location.state;\n\n  if (!inputDataWrapper) {\n    // If the state is not provided, try loading from local storage\n    inputDataWrapper = { inputData: loadData('questionAnswerData') || [] };\n  }\n\n  const inputData = inputDataWrapper.inputData;\n\n  const style = state ? inputData[number].question : inputData[number].answer;\n\n  function reverseState() {\n    setState((prevState) => !prevState);\n  }\n\n  function handleNext() {\n    setNumber((prevNumber) => (prevNumber < inputData.length - 1 ? prevNumber + 1 : 0));\n  }\n\n  function handlePrev() {\n    setNumber((prevNumber) => (prevNumber > 0 ? prevNumber - 1 : inputData.length - 1));\n  }\n\n  return (\n    <div>\n      <div className='quizCard' onClick={reverseState}>\n        <p>{style}</p>\n      </div>\n      <div>\n        <button onClick={handleNext}>Next</button>\n        <button onClick={handlePrev}>Previous</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Final;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,IAAIW,gBAAgB,GAAGD,QAAQ,CAACJ,KAAK;EAErC,IAAI,CAACK,gBAAgB,EAAE;IACrB;IACAA,gBAAgB,GAAG;MAAEC,SAAS,EAAEX,QAAQ,CAAC,oBAAoB,CAAC,IAAI;IAAG,CAAC;EACxE;EAEA,MAAMW,SAAS,GAAGD,gBAAgB,CAACC,SAAS;EAE5C,MAAMC,KAAK,GAAGP,KAAK,GAAGM,SAAS,CAACJ,MAAM,CAAC,CAACM,QAAQ,GAAGF,SAAS,CAACJ,MAAM,CAAC,CAACO,MAAM;EAE3E,SAASC,YAAYA,CAAA,EAAG;IACtBT,QAAQ,CAAEU,SAAS,IAAK,CAACA,SAAS,CAAC;EACrC;EAEA,SAASC,UAAUA,CAAA,EAAG;IACpBT,SAAS,CAAEU,UAAU,IAAMA,UAAU,GAAGP,SAAS,CAACQ,MAAM,GAAG,CAAC,GAAGD,UAAU,GAAG,CAAC,GAAG,CAAE,CAAC;EACrF;EAEA,SAASE,UAAUA,CAAA,EAAG;IACpBZ,SAAS,CAAEU,UAAU,IAAMA,UAAU,GAAG,CAAC,GAAGA,UAAU,GAAG,CAAC,GAAGP,SAAS,CAACQ,MAAM,GAAG,CAAE,CAAC;EACrF;EAEA,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAACC,OAAO,EAAER,YAAa;MAAAM,QAAA,eAC9CnB,OAAA;QAAAmB,QAAA,EAAIT;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNzB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAQqB,OAAO,EAAEN,UAAW;QAAAI,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CzB,OAAA;QAAQqB,OAAO,EAAEH,UAAW;QAAAC,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtCID,KAAK;EAAA,QAGQJ,WAAW;AAAA;AAAA6B,EAAA,GAHxBzB,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}